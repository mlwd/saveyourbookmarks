<!DOCTYPE HTML>
<html>
<head>
<%- include('header.ejs') %>
</head>
<body>
<script type='text/jsx'>

  class TableRow extends React.Component {
    constructor(props) {
      super(props);
      this.state = {edit: false};
    }

    startEdit() {
      this.setState({edit: true});
    }

    cancelEdit() {
      delete this.title;
      delete this.url;
      this.setState({edit: false});
    }

    saveEdit() {
      if (!this.title && !this.url) return;
      const save_title = this.title || this.props.title;
      const save_url = this.url || this.props.url;
      this.props.editBookmark(save_title, save_url, this.props.title, this.props.url);
      this.cancelEdit();
    }

    changeTitle(e) {
      this.title = e.target.value;
    }

    changeURL(e) {
      this.url = e.target.value;
    }

    render () {
      if (this.state.edit) return this.renderEditable();
      return (
        <tr>
          <td>{this.props.title}</td>
          <td><a href={this.props.url}>{this.props.url}</a></td>
          <td>
            <button onClick={() => deleteBookmarkWhere(this.props.title, this.props.url)}
                   className='btn-sm btn-outline-primary'>
              Delete
            </button>
          </td>
          <td>
            <button onClick={() => this.startEdit()}
                    className='btn-sm btn-outline-primary'>
              Edit
            </button>
          </td>
        </tr>
      );
    }

    renderEditable() {
      return (
        <tr>
          <td><input type="text" defaultValue={this.props.title}
                     onChange={(e) => this.changeTitle(e)}></input></td>
          <td><input type="text" defaultValue={this.props.url}
                     onChange={(e) => this.changeURL(e)}></input></td>
          <td>
            <button onClick={() => this.cancelEdit()}
                    className='btn-sm btn-outline-primary'>
              Cancel
            </button>
          </td>
          <td>
            <button onClick={() => this.saveEdit()}
                    className='btn-sm btn-outline-primary'>
              Save
            </button>
          </td>
        </tr>
      );
    }
  }

  class TitleInput extends React.Component {
    render() {
      return (
        <input type='text' className='form-control-sm'
               placeholder={this.props.placeholder}
               value={this.props.value}
               contentEditable='true'
               onChange={this.props.onChange}>
        </input>
      );
    }
  }

  class TableRowInput extends React.Component {

    constructor(props) {
      super(props);
      this.state = {title: '', url: ''};
    }

    onChangeTitle(e) {
      this.setState({title: e.target.value});
    }

    onChangeURL(e) {
      this.setState({url: e.target.value});
    }

    startSearch() {
      this.props.searchBookmark(this.state.title, this.state.url);
    }

    saveBookmark() {
      this.props.saveBookmark(this.state.title, this.state.url);
      this.setState({title: '', url: ''});
    }

    render () {
      console.log("Table row input: " + this.props.title);
      return (
        <tr>
          <td><TitleInput placeholder='Title' value={this.state.title}
                          onChange={(e) => this.onChangeTitle(e)}/></td>
          <td><TitleInput placeholder='Link'  value={this.state.url  }
                          onChange={(e) => this.onChangeURL(e)}/></td>
          <td>
            <button onClick={() => this.startSearch()}
                    className='btn-sm btn-outline-primary'>
              Search
            </button>
          </td>
          <td>
            <button onClick={() => this.saveBookmark()}
                    className='btn-sm btn-outline-primary'>
              Save
            </button>
          </td>
        </tr>
      );
    }
  }

  class TableBody extends React.Component {
    constructor(props) {
      super(props);
      this.state = {search_title: '', search_url: ''};
    }

    searchBookmark(search_title, search_url) {
      this.setState({search_title, search_url});
    }

    render() {
      console.log("Render state: " + this.state.search_title + ", " + this.state.search_url);
      const tableRows = [<TableRowInput title={this.state.search_title} url={this.state.search_url}
                                        searchBookmark={(t, u) => this.searchBookmark(t, u)}
                                        saveBookmark={(t, u) => this.saveBookmark(t, u)}/>];
      for (let row of this.props.rows) {
        if (row.title.includes(this.state.search_title) &&
            row.url.includes(this.state.search_url)) {
          tableRows.push(<TableRow title={row.title} url={row.url}
                                   saveBookmark={(t, u) => this.saveBookmark(t, u)}
                                   editBookmark={(t, u, ot, ou) => this.editBookmark(t, u, ot, ou)} />);
        }
      }
      return tableRows;
    }

    saveBookmark(title, url) {
      console.log("Save bookmark " + title + ", " + url);
      if (!title || !url) return;
      const messageDiv = document.getElementById('message-div');
      axios.post('/savebookmark', {title, url})
        .then((response) => {
          const message = response.data.message;
          if (message) {
            messageDiv.innerHTML = message;
          }
          loadBookmark();
        })
        .catch((err) => console.log(err));
    }

    editBookmark(title, url, old_title, old_url) {
      console.log("Edit bookmark " + title + ", " + url);
      if (!title || !url) return;
      const messageDiv = document.getElementById('message-div');
      axios.post('/editbookmark', {title, url, old_title, old_url})
        .then((response) => {
          const message = response.data.message;
          if (message) {
            messageDiv.innerHTML = message;
          }
          loadBookmark();
        })
        .catch((err) => console.log(err));
    }

  }

  function loadBookmark() {
    axios.get('/loadbookmark').then((response) => {
      ReactDOM.render(<TableBody rows={response.data}/>, document.getElementById('bookmark-table-body'));
    });
  }

  function deleteBookmarkWhere(title, url) {
    axios.post('/deletebookmarkwhere', {title, url})
      .then(loadBookmark)
      .catch((err) => {console.log(err);});
  }

  loadBookmark();
</script>
<div class="col-lg-8 mx-auto py-md-5">
  <h4>Save your bookmarks!</h4>
  <span id='message-div'></span>
  <table id='bookmark-table' class='table'>
    <thead><tr>
      <td>Title</td><td>Link</td><td>Action</td>
    </thead></tr>
    <tbody id='bookmark-table-body'></tbody>
  </table>
</div>
</body>
</html>
